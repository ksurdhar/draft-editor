import { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Box } from '@mui/material'
import Table from '@mui/material/Table'
import TableBody from '@mui/material/TableBody'
import TableCell from '@mui/material/TableCell'
import TableContainer from '@mui/material/TableContainer'
import TableRow from '@mui/material/TableRow'
import { useState } from 'react'
import InsertDriveFileTwoToneIcon from '@mui/icons-material/InsertDriveFileTwoTone'
import {  useUser } from '@auth0/nextjs-auth0'
import { DocumentData } from '../types/globals'

interface VersionModalProps {
  open: boolean
  onClose: () => void
  document: DocumentData
}

interface VersionData {
  id: string
  name?: string
  createdAt: number
  autogenerated: boolean
  wordCount: number
  content: string 
}

const VersionModal = ({ open, onClose, document }: VersionModalProps) => {
  const { user } = useUser()

  const [ versions, setVersions] = useState<VersionData[]>([
    {  id: '01', createdAt: Date.now(), autogenerated: false, wordCount: 600, content: 'foo', name: 'version 2',  },
    {  id: '02', createdAt: Date.now() + 10000000000, autogenerated: true, wordCount: 1000, content: 'foo' },
    {  id: '03', createdAt: Date.now() + 12, autogenerated: true, wordCount: 800, content: 'foo' },
  ])
  const [selectedVersion, setSelectedVersion] = useState<string | null>()

  if (!user) return <></>

  versions.sort((versionA, versionB) => versionB.createdAt - versionA.createdAt)

  return (
    <Dialog open={open} onClose={onClose}>
      <Box sx={{ minWidth: '576px' }} onClick={() => setSelectedVersion(null)}>
      <DialogTitle>{`Versions`}</DialogTitle>
      <DialogContent>
        <DialogContentText>
          Preview or restore to a previous version of a this document.
        </DialogContentText>
        <Box sx={{ padding: '16px'}}>
          <TableContainer>
            <Table size='small'>
              <TableBody>
                {versions.map((version) => (
                  <TableRow
                    hover
                    key={version.id}
                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
                    onClick={(e) => {
                      e.stopPropagation()
                      setSelectedVersion(version.id)
                    }}
                    selected={version.id === selectedVersion}
                  >
                    <TableCell component="th" scope="row">
                      <InsertDriveFileTwoToneIcon fontSize='medium'/>
                    </TableCell>

                    <TableCell component="th" scope="row">
                      {new Date(version.createdAt).toDateString()}
                    </TableCell>
                    <TableCell>{`${version.wordCount} words`}</TableCell>
                    <TableCell sx={{maxWidth: '160px'}}>{version.name}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </Box>
      </DialogContent>
      <DialogActions>
        { selectedVersion && 
        <>
          <Button onClick={async () => {
            onClose()
          }}>
            Preview
          </Button>
          <Button onClick={async () => {
            onClose()
          }}>
            Restore
          </Button>
        </>
        }
        {
          !selectedVersion && 
          <Button onClick={async () => {
            onClose()
          }}>
            Create Version
          </Button>
        }
        <Button onClick={async () => {
          onClose()
        }}>Done</Button>
      </DialogActions>
      </Box>
    </Dialog>
  )
}

export default VersionModal