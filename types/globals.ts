// globals.d.ts
declare global {
  interface Window {
    env: any
  }
}

export {}

export type DocumentContent = {
  type: string
  content?: any[]
  text?: string
  marks?: Array<{ type: string }>
}

export type DocContent = {
  type: 'doc'
  content: DocumentContent[]
}

// The content structure when document is loaded in the app
export type DeserializedContent = DocContent

// The content structure when document is stored
export type SerializedContent = {
  type: 'yjs'
  content: number[] // Serialized YDoc as Uint8Array
}

export type DocumentData = {
  _id: string
  id: string // Added for compatibility with frontend
  title: string
  content: string | DeserializedContent | SerializedContent
  comments?: CommentData[]
  lastUpdated: number
  userId: string
  canEdit?: boolean
  canComment?: boolean
  parentId?: string | 'root' // ID of the parent folder, 'root' means root level
  folderIndex: number // Position within the parent folder, lower numbers appear first
  updatedBy?: 'local' | 'remote' // Added to track sync state
}

export type CommentData = {
  id: string
  timestamp: number
  content: string
}

export type ShareUser = {
  email: string
  permission: UserPermission
}

export type PermissionData = {
  documentId: string
  ownerId: string
  globalPermission: UserPermission
  users: ShareUser[]
}

export interface VersionData {
  id: string
  documentId: string
  ownerId: string
  content: any // Using 'any' to support both Tiptap and legacy content
  createdAt: number
  name?: string
  autoGenerated?: boolean
  wordCount?: number
}

export enum UserPermission {
  View = 'View',
  Comment = 'Comment',
  Edit = 'Edit',
  None = 'None',
}

export type AnimationState = 'Active' | 'Complete' | 'Inactive'


export type FolderData = {
  _id: string
  id?: string // Added for compatibility with frontend
  title: string
  parentId?: string | 'root' // ID of the parent folder, 'root' means root level
  userId: string
  lastUpdated: number
  folderIndex: number // Position within the parent folder, lower numbers appear first
}
